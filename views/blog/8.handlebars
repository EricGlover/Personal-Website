<div class="container-fluid">
  <div class="row">
    <!-- Main content -->
    <main id='main-wrapper' class='col-12 col-sm-10 col-lg-10'>
      <!-- Blog header -->
      <header id='title' class='col-12'>
        <!-- <h3>Blog</h3> -->
        <!-- hero image here? -->
      </header>

      <!-- Post -->
      <main>
        <!-- general format -->
        <article class='post'>
          <header>
            <h2>The Challenge of Communication</h2>
            <h5 id='detail'>Date : 9/20/17 </h5>
          </header>
          <section>
            <h3>Philosophy and Programming</h3>
            <p>Today I find myself thinking about philosophy and it’s similarities with programming. At first glance the
              two seem quite disparate; most people think of philosophy as the long-winded, pedantic meandering thoughts
              of old men in lofty ivory towers, programming seems to stand in stark contrast with this because of it’s
              immense practical utility. But I think there’s some remarkable shared ground between the two. Clearly,
              both philosophy and programming require logic. The basics of logic are essential to program flow control
              and I hear logic is useful in philosophy ( :P ). Besides this what else do they share?</p>
          </section>
          <section>
            <h3>Communication</h3>
            <p>The best programmers / software engineers are excellent communicators. Why? Well, it makes sense given
              that the programmers normally work in a team and being an effective communicator is necessary for working
              cooperatively. More than that though a great engineer writes less bug ridden code.</p>
          </section>
          <section>
            <h3>Understanding</h3>
            <p>A pre-requisite to communicating an idea effectively is having a clear understanding of it. Everyone’s
              heard of the Einstein quote on the matter.</p>
            <p>“If you can’t explain it to a six year old, you don’t understand it yourself.” - Einstein</p>
            <p>I often take this to the extreme and use it as a test of my understanding, one thing I’ve concluded from
              such experiments is that brevity and candy are also prerequisites to understanding - for some strange
              reason my cousins were never as fascinated by my explanations of recursion as I would have expected.
              On a serious note though, there is a useful distinction to be made here. There are varying levels of
              understanding and without having to communicate an idea to someone else you may never realize that while
              you understand a concept well enough to implement it in what your working on right now you don’t
              understand it fully. And that’s the key bit…fully. If you don’t understand what you’re doing fully then
              when things get more complex or when you get more sleep deprived you’re just inviting bugs to lurk in
              mysterious places in code. </p>
          </section>
          <section>
            <h3>Communication is a challenge</h3>
            <p>Talking through a problem can take your understanding to the next level. This brings me right back to
              philosophy. In my opinion the best works of philosophy are an exhibition match. In one corner we have the
              philosopher and in the other an abstract idea. The philosopher wrestles with the idea while attempting to
              communicate to the audience and the best part is that they frequently have to invent the language to even
              communicate these ideas! Take this gem from Plato’s Euthyphro--</p>
            <p>And a thing is not seen because it is visible, but conversely, visible because it is seen; nor is a thing
              led because it is in the state of being led, or carried because it is in the state of being carried, but
              the converse of this. And now I think, Euthyphro, that my meaning will be intelligible; and my meaning is,
              that any state of action or passion implies previous action or passion. It does not become because it is
              becoming, but it is in a state of becoming because it becomes; neither does it suffer because it is in a
              state of suffering, but it is in a state of suffering because it suffers. Do you not agree? </p>
            <p> The epitome of wrestling with an idea. That’s a death match between Plato (speaking through Socrates)
              and morality (which you can’t tell in this passage because he’s establishing an analogy to prove his
              point). And now we’ve found some shared ground - abstruseness. If we were to apply the same standards of
              legibility that we do with code to this passage we’d be forced to declare it infested with potential bugs.
              Communicating ideas that you’re just learning in programming and philosophy inevitably begins like this.
              As we acquire increased understanding of the problem, and familiarity with it we begin to write simple,
              understandable code; and we can verbally communicate the approach to others. Both philosophy and
              programming share this process of wresting with ideas, clarifying our definitions of the problem, and
              reifying our understanding of it until we can (hopefully) explain it to a six year old.</p>
          </section>
        </article>
      </main>
      <footer>
        {{>blogLinks}}
      </footer>
    </main>
  </div>
</div>